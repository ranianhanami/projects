{"cells":[{"cell_type":"markdown","metadata":{"id":"ZXLBP-ikjSCn"},"source":["# Install Module"]},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3870,"status":"ok","timestamp":1655217232236,"user":{"displayName":"Raniah Nur Hanami","userId":"10102360714749787959"},"user_tz":-420},"id":"aUAC_xosjTAR","outputId":"50aa8d26-540b-4a73-c9f2-c10ba7ca83ca"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: gdown in /usr/local/lib/python3.7/dist-packages (4.4.0)\n","Requirement already satisfied: beautifulsoup4 in /usr/local/lib/python3.7/dist-packages (from gdown) (4.6.3)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from gdown) (1.15.0)\n","Requirement already satisfied: requests[socks] in /usr/local/lib/python3.7/dist-packages (from gdown) (2.23.0)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.7/dist-packages (from gdown) (3.7.1)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.7/dist-packages (from gdown) (4.64.0)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests[socks]->gdown) (1.24.3)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests[socks]->gdown) (2.10)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests[socks]->gdown) (3.0.4)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests[socks]->gdown) (2022.5.18.1)\n","Requirement already satisfied: PySocks!=1.5.7,>=1.5.6 in /usr/local/lib/python3.7/dist-packages (from requests[socks]->gdown) (1.7.1)\n"]}],"source":["!pip install --upgrade --no-cache-dir gdown"]},{"cell_type":"markdown","metadata":{"id":"wR7B4RtwjUfM"},"source":["# Import Module"]},{"cell_type":"code","execution_count":23,"metadata":{"executionInfo":{"elapsed":4,"status":"ok","timestamp":1655217673723,"user":{"displayName":"Raniah Nur Hanami","userId":"10102360714749787959"},"user_tz":-420},"id":"UucnjkHxjTa3"},"outputs":[],"source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","import numpy as np\n","from tqdm import tqdm\n","import datetime\n","\n","import tensorflow as tf\n","from tensorflow import keras\n","from tensorflow.keras.models import load_model\n","from tensorflow.keras import activations\n","from keras.models import Model, Sequential\n","from keras.layers import Input, Conv1D, Dense, Activation, Dropout, Lambda, Multiply, Add, Concatenate"]},{"cell_type":"markdown","metadata":{"id":"Ga59hzTajZuW"},"source":["# Import Dataset"]},{"cell_type":"markdown","metadata":{"id":"euT-DHM4jc9L"},"source":["## Download dataset"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2624,"status":"ok","timestamp":1655217237292,"user":{"displayName":"Raniah Nur Hanami","userId":"10102360714749787959"},"user_tz":-420},"id":"WYNXPIP0jYkU","outputId":"39682a43-6b6d-4c61-a877-c6656cfa2934"},"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading...\n","From: https://drive.google.com/uc?id=1RQEXXW3aW2LHAawFo0OiAXfYWYgwF0Gh\n","To: /content/train.csv\n","100% 17.3M/17.3M [00:00<00:00, 62.8MB/s]\n"]}],"source":["!gdown \"1RQEXXW3aW2LHAawFo0OiAXfYWYgwF0Gh\""]},{"cell_type":"markdown","metadata":{"id":"-gRPj0X_jfyx"},"source":["## Open dataset"]},{"cell_type":"code","execution_count":4,"metadata":{"executionInfo":{"elapsed":682,"status":"ok","timestamp":1655217237970,"user":{"displayName":"Raniah Nur Hanami","userId":"10102360714749787959"},"user_tz":-420},"id":"wg_W04Y9jeWa"},"outputs":[],"source":["df = pd.read_csv('/content/train.csv')"]},{"cell_type":"code","execution_count":5,"metadata":{"executionInfo":{"elapsed":19,"status":"ok","timestamp":1655217237971,"user":{"displayName":"Raniah Nur Hanami","userId":"10102360714749787959"},"user_tz":-420},"id":"TTGE7Anc01uS"},"outputs":[],"source":["lst_store = list(set(df['store']))\n","lst_item = list(set(df['item']))"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"elapsed":18,"status":"ok","timestamp":1655217237973,"user":{"displayName":"Raniah Nur Hanami","userId":"10102360714749787959"},"user_tz":-420},"id":"hyaAJ5Jtucsj","outputId":"964c8eec-bfe7-4f5f-c15c-991f30a8ee4a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["         date  store  item  sales\n","0  2013-01-01      1     1     13\n","1  2013-01-02      1     1     11\n","2  2013-01-03      1     1     14\n","3  2013-01-04      1     1     13\n","4  2013-01-05      1     1     10"],"text/html":["\n","  <div id=\"df-da45ba1f-8198-4565-a969-decde6d9015c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>store</th>\n","      <th>item</th>\n","      <th>sales</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2013-01-01</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2013-01-02</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2013-01-03</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2013-01-04</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2013-01-05</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>10</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-da45ba1f-8198-4565-a969-decde6d9015c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-da45ba1f-8198-4565-a969-decde6d9015c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-da45ba1f-8198-4565-a969-decde6d9015c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":7}],"source":["df.head()"]},{"cell_type":"markdown","metadata":{"id":"LrTGSKtR1dZ5"},"source":["# Function"]},{"cell_type":"markdown","metadata":{"id":"pFEuSJ5quFe_"},"source":["## Split data"]},{"cell_type":"code","execution_count":9,"metadata":{"executionInfo":{"elapsed":473,"status":"ok","timestamp":1655217245421,"user":{"displayName":"Raniah Nur Hanami","userId":"10102360714749787959"},"user_tz":-420},"id":"honzf7qa0rZ2"},"outputs":[],"source":["def train_test_split(data, ratio):\n","    train_set = pd.DataFrame(columns=data.columns)\n","    test_set = pd.DataFrame(columns=data.columns)\n","\n","    lst_store = list(set(data['store']))\n","    lst_item = list(set(data['item']))\n","\n","    for i in lst_store:\n","        for j in lst_item:\n","            filtered_data = data[(data['store'] == i) & (data['item'] == j)]\n","            row, col = filtered_data.shape\n","            train_data = filtered_data.iloc[0:int((1-ratio)*row),:]\n","            test_data = filtered_data.iloc[int((1-ratio)*row):,:]\n","            train_set = train_set.append(train_data, ignore_index=True)\n","            test_set = test_set.append(test_data, ignore_index=True)\n","        \n","    return train_set, test_set"]},{"cell_type":"markdown","metadata":{"id":"Ff46GzMHwqfQ"},"source":["## Feature Extraction"]},{"cell_type":"code","execution_count":10,"metadata":{"executionInfo":{"elapsed":4,"status":"ok","timestamp":1655217246047,"user":{"displayName":"Raniah Nur Hanami","userId":"10102360714749787959"},"user_tz":-420},"id":"-fHm9_NKfu9Z"},"outputs":[],"source":["def create_feature(df, lag):\n","    lst_col = []\n","    for i in range(1, lag+1):\n","        col_name = \"lag_\" + str(i)\n","        lst_col.append(col_name)\n","\n","    lst_store = list(set(df['store']))\n","    lst_item = list(set(df['item']))\n","\n","    res_df = pd.DataFrame(columns=lst_col)\n","\n","    # Create lag features\n","    tmp_data = []\n","    for store in tqdm(lst_store):\n","        for item in lst_item:\n","            filtered_data = df[(df['store'] == store) & (df['item'] == item)]\n","            for i in range(1, lag+1):\n","                filtered_data[lst_col[i-1]] = filtered_data['sales'].shift(i)\n","            # res_df = res_df.append(filtered_data.iloc[lag:,:], ignore_index=True)\n","            for i in range(lag, filtered_data.shape[0]):\n","                row = filtered_data.iloc[i,:]\n","                data = [row['date'], row['store'], row['item']]\n","                lst_val = list(row[lst_col].values)[::-1]\n","                data.append(lst_val)\n","                data.append(row['sales'])\n","                tmp_data.append(data)\n","    \n","    res_df = pd.DataFrame(tmp_data, columns=['date', 'store', 'item', 'lag', 'value'])\n","\n","    # Create optional features \n","    cat = pd.get_dummies(res_df, columns=['store', 'item'])\n","    cat.drop(['date', 'lag', 'value'], axis=1, inplace=True)\n","\n","    res = pd.concat([res_df, cat], axis=1)  \n","\n","    return res"]},{"cell_type":"code","execution_count":11,"metadata":{"executionInfo":{"elapsed":4,"status":"ok","timestamp":1655217246551,"user":{"displayName":"Raniah Nur Hanami","userId":"10102360714749787959"},"user_tz":-420},"id":"IlwM24bEaO86"},"outputs":[],"source":["def extract_feature(data) :\n","  inputs = np.array([np.array(i) for i in data['lag']]).astype('float32')\n","  cond_1 = np.array(data.loc[:, [col for col in data.columns if 'store_' in col]]).astype('float32')\n","  cond_2 = np.array(data.loc[:, [col for col in data.columns if 'item_' in col]]).astype('float32')\n","  outputs = np.array(data['value']).astype('float32')\n","  return [inputs, cond_1, cond_2], outputs"]},{"cell_type":"markdown","metadata":{"id":"_AQXBChE1khv"},"source":["## Train Model"]},{"cell_type":"code","execution_count":12,"metadata":{"executionInfo":{"elapsed":4,"status":"ok","timestamp":1655217247313,"user":{"displayName":"Raniah Nur Hanami","userId":"10102360714749787959"},"user_tz":-420},"id":"yw19H4Og1mFU"},"outputs":[],"source":["def train_model(df, lag):\n","  res = create_feature(df, lag)\n","  train_df, val_df = train_test_split(res, 0.2)\n","  \n","  train_x, train_y = extract_feature(train_df)\n","  val_x, val_y = extract_feature(val_df)\n","\n","  tf.compat.v1.reset_default_graph()\n","  model = wavenet_model_setup(n_layers_per_block=4, n_blocks=3, n_filters=64, lag=lag, n_outputs=1, name='wavenet')\n","  model.fit(\n","    verbose=1,\n","    x=train_x, y=train_y,\n","    validation_data=(val_x, val_y),\n","    epochs=10,\n","    batch_size=int(res.shape[0]/500)\n","  )\n","  return model"]},{"cell_type":"markdown","metadata":{"id":"oVKqcxu32lPy"},"source":["## Test Model"]},{"cell_type":"code","execution_count":13,"metadata":{"executionInfo":{"elapsed":4,"status":"ok","timestamp":1655217248809,"user":{"displayName":"Raniah Nur Hanami","userId":"10102360714749787959"},"user_tz":-420},"id":"XrUZ4Pd41mJW"},"outputs":[],"source":["def test_model(model, test_df, lag) :\n","  test = create_feature(df, lag)\n","  test_x, test_y = extract_feature(test)\n","  res = model.evaluate(test_x, test_y)\n","  return res"]},{"cell_type":"markdown","metadata":{"id":"Wgg-tEs7jjjL"},"source":["# WaveNet Network"]},{"cell_type":"code","execution_count":29,"metadata":{"executionInfo":{"elapsed":608,"status":"ok","timestamp":1655217913716,"user":{"displayName":"Raniah Nur Hanami","userId":"10102360714749787959"},"user_tz":-420},"id":"CKDMcQID-TTg"},"outputs":[],"source":["def wavenet_residual_block(inputs, n_filters, dilation_rate):\n","    z = keras.layers.Conv1D(2 * n_filters, kernel_size=2, padding=\"causal\",\n","                            dilation_rate=dilation_rate)(inputs)\n","    w = keras.layers.Activation(activations.relu)(z)\n","    y = keras.layers.Activation(activations.sigmoid)(z)\n","    z = keras.layers.Multiply()([w,y])\n","    z = keras.layers.Conv1D(n_filters, kernel_size=1)(z)\n","    return keras.layers.Add()([z, inputs]), z"]},{"cell_type":"code","execution_count":16,"metadata":{"executionInfo":{"elapsed":7,"status":"ok","timestamp":1655217249422,"user":{"displayName":"Raniah Nur Hanami","userId":"10102360714749787959"},"user_tz":-420},"id":"mYvKokyrB86J"},"outputs":[],"source":["def slice(x, seq_length):\n","    return x[:,-seq_length:,:]"]},{"cell_type":"code","execution_count":17,"metadata":{"executionInfo":{"elapsed":7,"status":"ok","timestamp":1655217249423,"user":{"displayName":"Raniah Nur Hanami","userId":"10102360714749787959"},"user_tz":-420},"id":"xZCq1_y9fvDX"},"outputs":[],"source":["def wavenet_model_setup(n_layers_per_block, n_blocks, n_filters, n_outputs, name, lag, last_activation='relu'):\n","    # n_layers_per_block = 10 in the paper\n","    # n_blocks = 3 in the paper\n","    # n_filters = 128 in the paperr\n","    \n","    inputs1 = keras.layers.Input(shape=[lag,1])\n","    inputs2 = keras.layers.Input(shape=[10,1])\n","    inputs3 = keras.layers.Input(shape=[50,1])\n","    merged = keras.layers.Concatenate(axis=1)([inputs1, inputs2, inputs3])\n","    z = keras.layers.Conv1D(n_filters, kernel_size=2, padding=\"causal\")(merged)\n","\n","    skip_to_last = []\n","    for dilation_rate in [2**i for i in range(n_layers_per_block)] * n_blocks:\n","        z, skip = wavenet_residual_block(z, n_filters, dilation_rate)\n","        skip_to_last.append(skip)\n","    z = keras.activations.relu(keras.layers.Add()(skip_to_last))\n","    z = keras.layers.Conv1D(n_filters, kernel_size=1, activation=\"relu\")(z)\n","    out = keras.layers.Conv1D(n_outputs, kernel_size=1, activation=last_activation)(z)\n","    pred_seq_train = Lambda(slice, arguments={'seq_length':1})(out)\n","    model = keras.models.Model(inputs=[inputs1,inputs2,inputs3], outputs=[pred_seq_train], name = name)\n","    model.compile(optimizer='adam', loss='mse')\n","    return model"]},{"cell_type":"markdown","metadata":{"id":"c0HlAdsAhH9o"},"source":["# Model"]},{"cell_type":"code","execution_count":18,"metadata":{"executionInfo":{"elapsed":8102,"status":"ok","timestamp":1655217262022,"user":{"displayName":"Raniah Nur Hanami","userId":"10102360714749787959"},"user_tz":-420},"id":"6WLyvWPI0Ffu"},"outputs":[],"source":["lag = 4\n","train, test = train_test_split(df, 0.2)"]},{"cell_type":"code","execution_count":30,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"soYX4dFDnX-M","executionInfo":{"status":"ok","timestamp":1655219437214,"user_tz":-420,"elapsed":1521879,"user":{"displayName":"Raniah Nur Hanami","userId":"10102360714749787959"}},"outputId":"f544c957-26cb-42e2-9433-f0292a11352f"},"outputs":[{"output_type":"stream","name":"stderr","text":["\r  0%|          | 0/10 [00:00<?, ?it/s]/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:18: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","100%|██████████| 10/10 [06:23<00:00, 38.35s/it]\n"]},{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n","400/400 [==============================] - 113s 245ms/step - loss: 752.3165 - val_loss: 1074.5211\n","Epoch 2/10\n","400/400 [==============================] - 98s 245ms/step - loss: 700.9511 - val_loss: 1209.9561\n","Epoch 3/10\n","400/400 [==============================] - 98s 244ms/step - loss: 700.7322 - val_loss: 1097.1084\n","Epoch 4/10\n","400/400 [==============================] - 98s 244ms/step - loss: 698.8458 - val_loss: 1107.3208\n","Epoch 5/10\n","400/400 [==============================] - 98s 244ms/step - loss: 699.4202 - val_loss: 1162.1002\n","Epoch 6/10\n","400/400 [==============================] - 98s 244ms/step - loss: 698.8463 - val_loss: 1052.3462\n","Epoch 7/10\n","400/400 [==============================] - 98s 245ms/step - loss: 699.5164 - val_loss: 1109.1420\n","Epoch 8/10\n","400/400 [==============================] - 98s 245ms/step - loss: 698.1416 - val_loss: 1118.3558\n","Epoch 9/10\n","400/400 [==============================] - 98s 244ms/step - loss: 698.5448 - val_loss: 1104.0515\n","Epoch 10/10\n","400/400 [==============================] - 98s 244ms/step - loss: 698.3758 - val_loss: 1136.9485\n"]}],"source":["model = train_model(train, lag)"]},{"cell_type":"code","execution_count":31,"metadata":{"id":"s7CiU-BWoAqL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1655220057345,"user_tz":-420,"elapsed":618916,"user":{"displayName":"Raniah Nur Hanami","userId":"10102360714749787959"}},"outputId":"c7bf583a-9692-4e08-d0c4-12e2c1ec61da"},"outputs":[{"output_type":"stream","name":"stderr","text":["\r  0%|          | 0/10 [00:00<?, ?it/s]/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:18: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","100%|██████████| 10/10 [07:53<00:00, 47.34s/it]\n"]},{"output_type":"stream","name":"stdout","text":["28469/28469 [==============================] - 142s 5ms/step - loss: 853.2749\n"]}],"source":["res = test_model(model, test, lag)"]},{"cell_type":"code","execution_count":32,"metadata":{"id":"qKzIjRJgvt68","executionInfo":{"status":"ok","timestamp":1655220057346,"user_tz":-420,"elapsed":9,"user":{"displayName":"Raniah Nur Hanami","userId":"10102360714749787959"}}},"outputs":[],"source":["model.save('wavenet-final.h5')"]},{"cell_type":"code","source":[""],"metadata":{"id":"_agHpLul6AyQ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Use model"],"metadata":{"id":"ko81kOzi1UW3"}},{"cell_type":"code","execution_count":38,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":386733,"status":"ok","timestamp":1655221497007,"user":{"displayName":"Raniah Nur Hanami","userId":"10102360714749787959"},"user_tz":-420},"id":"95cCW6jLVkzk","outputId":"82c69ed4-656d-467f-ef54-cd132fb88acb"},"outputs":[{"output_type":"stream","name":"stderr","text":["\r  0%|          | 0/10 [00:00<?, ?it/s]/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:18: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","100%|██████████| 10/10 [06:25<00:00, 38.51s/it]\n"]}],"source":["a = create_feature(train, 4)"]},{"cell_type":"code","source":["a_x, a_y = extract_feature(a)"],"metadata":{"id":"mBFTP3uTqSfC","executionInfo":{"status":"ok","timestamp":1655221603710,"user_tz":-420,"elapsed":2005,"user":{"displayName":"Raniah Nur Hanami","userId":"10102360714749787959"}}},"execution_count":40,"outputs":[]},{"cell_type":"code","source":["a_x[2].shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9JAPEwcx5OAe","executionInfo":{"status":"ok","timestamp":1655221760615,"user_tz":-420,"elapsed":514,"user":{"displayName":"Raniah Nur Hanami","userId":"10102360714749787959"}},"outputId":"f31b8c66-7f1c-488a-90ac-199481a7dc88"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(728000, 50)"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["date = '2017-01-03'\n","store = 1\n","item = 14"],"metadata":{"id":"zeWJm7hX6b6B","executionInfo":{"status":"ok","timestamp":1655221897570,"user_tz":-420,"elapsed":322,"user":{"displayName":"Raniah Nur Hanami","userId":"10102360714749787959"}}},"execution_count":48,"outputs":[]},{"cell_type":"code","source":["date_limit = datetime.datetime.strptime('2016-12-30', \"%Y-%m-%d\").date()"],"metadata":{"id":"bWIF4Ork6b_K","executionInfo":{"status":"ok","timestamp":1655221901824,"user_tz":-420,"elapsed":340,"user":{"displayName":"Raniah Nur Hanami","userId":"10102360714749787959"}}},"execution_count":49,"outputs":[]},{"cell_type":"code","source":["data = pd.read_csv(\"/content/train.csv\")"],"metadata":{"id":"6rGRlf4H6cB9","executionInfo":{"status":"ok","timestamp":1655221906120,"user_tz":-420,"elapsed":516,"user":{"displayName":"Raniah Nur Hanami","userId":"10102360714749787959"}}},"execution_count":50,"outputs":[]},{"cell_type":"code","source":["predicted_date =  datetime.datetime.strptime(date, \"%Y-%m-%d\").date()\n","filtered_data = data[(data['store'] == store) & (data['item'] == item)]\n","gap = predicted_date - date_limit\n","gap_days = gap.days\n","lag = list(filtered_data['sales'][-4:])\n","lst_store = [0] * 10\n","lst_store[store-1] = 1\n","lst_item = [0] * 50\n","lst_item[item - 1] = 1\n","res = []\n","res.append(np.array(lag).astype('float32').reshape(1,-1))\n","res.append(np.array(lst_store).astype('float32').reshape(1,-1))\n","res.append(np.array(lst_item).astype('float32').reshape(1,-1))\n"],"metadata":{"id":"FB4MpwGH6cE8","executionInfo":{"status":"ok","timestamp":1655222363785,"user_tz":-420,"elapsed":319,"user":{"displayName":"Raniah Nur Hanami","userId":"10102360714749787959"}}},"execution_count":70,"outputs":[]},{"cell_type":"code","source":["res"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l7Uqh3Gd75j7","executionInfo":{"status":"ok","timestamp":1655222368028,"user_tz":-420,"elapsed":6,"user":{"displayName":"Raniah Nur Hanami","userId":"10102360714749787959"}},"outputId":"24700c31-5e1b-49d7-cb2b-c8767d57066c"},"execution_count":71,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[array([[51., 42., 57., 52.]], dtype=float32),\n"," array([[1., 0., 0., 0., 0., 0., 0., 0., 0., 0.]], dtype=float32),\n"," array([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0.,\n","         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","         0., 0.]], dtype=float32)]"]},"metadata":{},"execution_count":71}]},{"cell_type":"code","source":["model.predict(res)[0][0][0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hZvR8SJg5VbC","executionInfo":{"status":"ok","timestamp":1655222447716,"user_tz":-420,"elapsed":4,"user":{"displayName":"Raniah Nur Hanami","userId":"10102360714749787959"}},"outputId":"bd78389f-91c0-41f4-ed28-93931c4b6ea0"},"execution_count":74,"outputs":[{"output_type":"execute_result","data":{"text/plain":["47.41264"]},"metadata":{},"execution_count":74}]},{"cell_type":"code","source":[""],"metadata":{"id":"JW-avom06glo"},"execution_count":null,"outputs":[]}],"metadata":{"accelerator":"GPU","colab":{"collapsed_sections":["ZXLBP-ikjSCn","wR7B4RtwjUfM","Ga59hzTajZuW","pFEuSJ5quFe_","Ff46GzMHwqfQ","_AQXBChE1khv","Wgg-tEs7jjjL"],"name":"WaveNet","provenance":[]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}